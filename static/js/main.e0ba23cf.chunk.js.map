{"version":3,"sources":["components/PageLink/PageLink.tsx","components/Navbar/Navbar.tsx","Pages/HomePage/HomePage.tsx","Pages/NotFoundPage/NotFoundPage.tsx","Pages/TabsPage/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageLink","to","text","className","isActive","classNames","Navbar","role","HomePage","NotFoundPage","tabs","id","title","content","TabsPage","selectedTab","useParams","currentTab","find","tab","map","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"uPASaA,EAA4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC9C,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAJnB,SAOGF,KChBMI,EAAS,WACpB,OACE,qBACE,UAAQ,MACRH,UAAU,oDACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAUF,GAAG,IAAIC,KAAK,SACtB,cAAC,EAAD,CAAUD,GAAG,QAAQC,KAAK,iBCbvBM,EAAW,WACtB,OACE,mCACE,oBAAIL,UAAU,QAAd,0BCHOM,EAAe,WAC1B,OACE,mCACE,oBAAIN,UAAU,QAAd,+BCAAO,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,IAAQC,EAAgBC,cAAhBD,YAEFE,EAAaP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,KAE/C,OACE,qCACE,oBAAIZ,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGO,EAAKU,KAAI,SAAAD,GAAG,OACX,oBACE,UAAQ,MACRhB,UAAWE,IAAW,CAAE,YAAaU,IAAgBI,EAAIR,KAF3D,SAKE,cAAC,IAAD,CAAMV,GAAE,gBAAWkB,EAAIR,IAAvB,SAA8BQ,EAAIP,SAF7BO,EAAIR,WAQjB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,UACa,OAAVc,QAAU,IAAVA,OAAA,EAAAA,EAAYJ,UAAW,4BCxBnBQ,EAAM,kBACjB,qCAEE,cAAC,EAAD,IAaA,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,OAAOC,QAAS,cAAC,EAAD,IAA5B,SACE,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,QAEtC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iBC7BnCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0ba23cf.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface Props {\n  to: string,\n  text: string,\n}\n\nexport const PageLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'is-active': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageLink } from '../PageLink/PageLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"Nav\"\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageLink to=\"/\" text=\"Home\" />\n          <PageLink to=\"/tabs\" text=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home page</h1>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <>\n      <h1 className=\"title\">Page not found</h1>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { selectedTab } = useParams();\n\n  const currentTab = tabs.find(tab => tab.id === selectedTab);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': selectedTab === tab.id })}\n              key={tab.id}\n            >\n              <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab?.content || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { HomePage } from './Pages/HomePage/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage/NotFoundPage';\nimport { TabsPage } from './Pages/TabsPage/TabsPage';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <Navbar />\n    {/* <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <a href=\"/\" className=\"navbar-item is-active\">Home</a>\n          <a href=\"/tabs\" className=\"navbar-item\">Tabs</a>\n        </div>\n      </div>\n    </nav> */}\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"tabs\" element={<TabsPage />}>\n            <Route path=\":selectedTab\" element={<TabsPage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}